I am taking input using standard input stream. There two files
 LispScanner - which reads from input stream and convert into tokens.
 LispParser - It takes token returned by LispScanner and generates a tree and print the tree.
 
Token has a value and a type.
Lisp Scanner has tokens of the following type-

- NUMERIC_ATOM = "NumericAtom"
- LITERAL_ATOM = "LiteralAtom" 
- OPEN_PARENTHESIS = "OpenParenthesis" 
- CLOSING_PARENTHESIS = "ClosingParenthesis" 
- EOF = "EOF" (End of file)
- DOT = "DOT" (dot)
- EOS = "EOS" (end of s-expression)

 LispScanner - reads input from input stream, it reads line by line. It has the following functions: 
 - init - which initializes the LispScanner, it calls MoveToNext function
 - getCurrent - it returns the current value of the token.
 - MoveToNext - It saves the value of next token to the current token
 - getNextToken - It scans lines by lines of input stream. Generates atomic/non-atomic tokens. 
 
 LispParser - It takes token returned by LispScanner and generates a tree and print the tree. It has the following functions:
 - startParsing - It parses the expression and prints it
 - printExpr - It prints the tree by performing tree traversal.
 - parseExpr - It takes token by the LispScanner , generates the tree on go. It also checks for errors in the s-expression and throws the expression.
 
 
 